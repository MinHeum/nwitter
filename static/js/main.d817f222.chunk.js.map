{"version":3,"sources":["fBase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","auth","firebaseInstance","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","onSubmit","event","preventDefault","update","toggleEditing","prev","className","type","placeholder","value","onChange","target","required","autoFocus","onClick","src","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d817f222.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MESUREMENT_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        };\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text:newNweet,\n        });\n        setEditing(false);\n    };\n\n    const toggleEditing = () => setEditing(prev => !prev);\n    return (\n        <div className=\"nweet\">\n            {\n                editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input \n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            onChange={onChange}\n                            required\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </button>\n                </>\n                ) : (\n                <>\n                <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n                    {isOwner && (\n                        <div class=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </> \n                )\n            }\n        </div>\n    )\n}\n\nexport default Nweet;","import { dbService, storageService } from \"fBase\";\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ( {userObj} ) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        if (nweet === \"\") {\n            return;\n        }\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                            .ref()\n                            .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return(\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                className=\"factoryInput__input\"\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label for=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n        <input type=\"submit\" value=\"Nweet\" />\n        { attachment && (\n            <div className=\"factoryForm__attachment\">\n                <img \n                src={attachment}\n                style={{\n                    backgroundImage: attachment,\n                    }}\n                />\n                <div className=\"factoryFrom__clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes}/>\n                </div>\n            </div>\n        )}\n    </form>\n    )\n}\nexport default NweetFactory;","import React, { useState, useEffect} from \"react\";\nimport { dbService } from \"fBase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home =  ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id:doc.id, ...doc.data(),\n            }));\n            setNweets(nweetArray);  \n        })\n    }, []);\n    \n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} /> \n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet \n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n           </div>\n        </div>\n    );\n};\nexport default Home;\n","import { authService } from \"fBase\";\nimport React, {useState} from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value},} =event   ;\n        if(name === \"email\") {\n            setEmail(value);\n        }\n        else if(name === \"password\") {\n            setPassword(value);\n        }\n    };\n    \n    const onSubmit = async (event) => {\n        event.preventDefault(); // 기본 행위가 실행되는것을 방지\n        try{\n            if (newAccount) {\n                //create Account\n                await authService.createUserWithEmailAndPassword(email, password);\n            }\n            else {\n                //log in\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        }\n        catch(error){\n            setError(error.message)\n        };\n    };\n\n    const toggleAccount = () => setNewAccount(prev => !prev);\n\n    return (\n        <>\n        <form onSubmit={onSubmit} className=\"container\" >\n            <input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                required\n                value={email}\n                onChange={onChange}\n                className=\"authInput\"\n            />\n            <input \n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                required\n                value={password}\n                onChange={onChange}\n                className=\"authInput\"\n            />\n            <input \n                type=\"submit\" \n                value={newAccount ? \"Create Account\" : \"Log In\"}\n            />\n            {error && <span className=\"authError\">{error}</span>}\n        </form>\n        <span onClick={toggleAccount} className=\"authSwitch\">\n            {newAccount ? \"Log in\" : \"Create Account\" }\n        </span>\n        </>\n    )\n\n}\n\nexport default AuthForm;","import React from \"react\";\nimport { authService, firebaseInstance } from \"fBase\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target:{name}\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }\n        else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button\n                    name=\"google\"\n                    onClick={onSocialClick}\n                    className=\"authBtn\"\n                >\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\n                </button>\n                <button\n                    name=\"github\"\n                    onClick={onSocialClick}\n                    className=\"authBtn\"\n                >\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\n                </button>\n            </div>\n        </div>\n    )\n};\n\nexport default Auth;","import React, { useState } from \"react\";\nimport { authService } from \"fBase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n    \n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"Display Name\"\n                    value={newDisplayName}\n                    autoFocus\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value =\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <button onClick={onLogOutClick} className=\"formBtn cancelBtn logout\">\n                Log Out\n            </button>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ( {userObj} ) => (\n    <nav>\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n            <li>\n                <Link to=\"/\" style={{ marginRight: 10 }}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link>            \n            </li>\n            <li>\n                <Link\n                    to=\"/profile\"\n                    style={{\n                        marginLeft: 10,\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        fontSize: 12,\n                    }}\n                >\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName\n                            ? `${userObj.displayName}의 Profile`\n                            : \"Profile\"}\n                    </span>\n                </Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;","import React, { } from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\nimport Profile from \"../routes/Profile\"\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter =  ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                    style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Route exact path=\"/\">\n                        <Home userObj={userObj} />\n                    </Route>    \n                    <Route exact path=\"/profile\">\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\n                    </Route>\n                </div> \n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )}\n            </Switch>   \n        </Router>\n    )\n}\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      }\n      else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n  return (\n  <>\n  {init ? (<AppRouter \n            refreshUser = {refreshUser}\n            isLoggedIn = {Boolean(userObj)}\n            userObj={userObj}/>) : \"Initializing...\"}\n    <footer>\n      &copy; {new Date().getFullYear()} Nwitter\n    </footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}